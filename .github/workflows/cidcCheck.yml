name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Maven Project
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '20'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

  test:
    name: Test Maven Project
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '20'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Maven Tests
        run: mvn test

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: startsWith(github.ref, 'refs/tags/v') # Nur ausführen, wenn ein Tag gepusht wurde

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Der Tag-Name
          release_name: Release ${{ github.ref_name }} # Der Release-Name
          body: |
            ## Änderungen in dieser Version
            Bitte fügen Sie die Release-Notizen hier hinzu.
          draft: false
          prerelease: false

      - name: Upload JAR File to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/your-artifact-name.jar # Ersetze durch den Namen deiner JAR-Datei
          asset_name: your-artifact-name.jar # Name der hochgeladenen Datei
          asset_content_type: application/java-archive
